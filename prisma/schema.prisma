generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model condition {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)
  description String? @db.VarChar(150)
  item        item[]
}

model category {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)
  description String? @db.VarChar(150)
  item        item[]
}

model item {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(50)
  description String?   @db.VarChar(250)
  amount      Int       @default(1)
  entryDate   DateTime  @default(now()) @map("entry_date") @db.Date
  condition   condition @relation(fields: [conditionid], references: [id])
  conditionid Int       @map("condition_id")
  category    category  @relation(fields: [categoryid], references: [id])
  categoryid  Int       @map("category_id")
  borrow      borrow[]
}

model AuthUser {
  id           String        @id @unique
  username     String        @db.VarChar(50)
  email        String?       @db.VarChar(150)
  auth_session AuthSession[]
  auth_key     AuthKey[]

  @@map("user")
}

model borrow {
  id            Int       @id @default(autoincrement())
  item          item      @relation(fields: [itemId], references: [id])
  itemId        Int
  borrowerName  String    @db.VarChar(50)
  borrowerPhone String    @db.VarChar(50)
  borrowerEmail String?   @db.VarChar(150)
  borrowDate    DateTime  @db.Date
  returnDate    DateTime? @db.Date
  amount        Int       @default(1)
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}
